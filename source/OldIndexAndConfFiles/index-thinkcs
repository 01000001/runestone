..  Copyright (C)  Brad Miller, David Ranum
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3 or
    any later version published by the Free Software Foundation; with
    Invariant Sections being Forward, Prefaces, and Contributor List,
    no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
    is included in the section entitled "GNU Free Documentation License".

.. meta::
   :description: An interactive version of How to Think Like a Computer Scientist.  Learn to program in Python using this online textbook.
   :keywords: python, turtle graphics, computer science

======================================
How to Think Like a Computer Scientist
======================================

.. image:: _static/python-logo.png
    :scale: 75%
    :alt: ThinkCSPy Logo

Learning with Python: Interactive Edition (Using Python 3.x)
------------------------------------------------------------

by Brad Miller and David Ranum

   Luther College


.. activecode:: welcome
   :above:
   :autorun:
   :hidecode:

   import turtle
   import random

   def main():
       tList = []
       head = 0
       for i in range(10):
           nt = turtle.Turtle()   # Make a new turtle, initialize values
           nt.setheading(head)
           nt.pensize(2)
           nt.color(random.randrange(256),random.randrange(256),random.randrange(256))
           nt.speed(10)
           nt.tracer(30,0)
           tList.append(nt)       # Add the new turtle to the list
           head = head + 360/10

       for i in range(100):
           moveTurtles(tList,15,i)

       w = tList[0]
       w.up()
       w.goto(-130,40)
       w.write("How to Think Like a ",True,"center","30px Arial")
       w.goto(-130,-35)
       w.write("Computer Scientist",True,"center","30px Arial")

   def moveTurtles(turtleList,dist,angle):
       for turtle in turtleList:   # Make every turtle on the list do the same actions.
           turtle.forward(dist)
           turtle.right(angle)

   main()


Benefits of an Interactive Textbook
-----------------------------------

* You can experiment with **activecode** examples right in the book
* You can do your homework right in the textbook
* Interactive Quizzes make sure that you are on track and help you focus
* **Codelens** helps you develop a model of how Python works
* Audio Tours help you understand the code
* Short videos cover the key points

Next Steps
----------

1. Get an overview of the features in this book  `Click Here <http://interactivepython.org/courselib/static/overview/OverviewForSite/overview.html>`_
2. Check out a sample chapter
3. Check out the :ref:`t_o_c`


.. toctree::
   :hidden:

   toc
